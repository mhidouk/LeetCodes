https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/description/?envType=study-plan-v2&envId=leetcode-75

Problem Summary: Given a string s and an integer k, return the maximum number of vowel letters in any substring of s with length k.

Brute-Force-approach:
1-Iterate through all possible substrings of length k
2- For each substring:
  .Count the number of vowels
3- Track the maximum vowel count
4- Return the maximum count 

Code in Py:
class Solution(object):
    def maxVowels(self, s, k):
        """
        :type s: str
        :type k: int
        :rtype: int
        """
        setmap = {'a', 'e', 'i', 'o', 'u'}
        current_vowels = 0
        max_vowels = 0 

        for right in range(len(s)):
            if s[right] in setmap:  #Add new character to the window
                current_vowels += 1

            if right >= k and s[right - k] in setmap:  #once window exceeds k remove old character from window
                current_vowels -= 1

            max_vowels = max(max_vowels, current_vowels)

        return max_vowels


