https://leetcode.com/problems/max-consecutive-ones-iii/?envType=study-plan-v2&envId=leetcode-75

Problem Summary: Given a binarry array nums and an integer k, return the maximum 
number of conse

Approach:
1.Initialize necessary variables to zero 
2.Iterate through the array using the right pointer
3.Shrink the window if unvalid
4.Update maximum length

Time complexity:O(n) time as each element is processed at most twice
Space complexity: O(1) no arrays or hashmaps, uses only extra space variables
           


Code: class Solution:
    def longestOnes(self, nums: List[int], k: int) -> int:
     left = 0
     zeroCount = 0
     maxCount = 0

     for right in range(len(nums)):
        if nums[right] == 0:
            zeroCount += 1

        while zeroCount > k:
            if nums[left] == 0:
                 zeroCount -= 1 
            left += 1 
  
        maxCount = max(maxCount, right - left + 1)

     return maxCount 
